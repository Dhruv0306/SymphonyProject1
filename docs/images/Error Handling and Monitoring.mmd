%%{init: {'theme': 'dark', 'themeVariables': { 'fontFamily': 'arial', 'fontSize': '18px', 'fontWeight': 'bold'}}}%%
graph TD
    subgraph "Error Sources"
        style A1 fill:#ffcdd2,stroke:#d32f2f,stroke-width:2px,color:#000000,font-weight:bold
        style A2 fill:#ffcdd2,stroke:#d32f2f,stroke-width:2px,color:#000000,font-weight:bold
        style A3 fill:#ffcdd2,stroke:#d32f2f,stroke-width:2px,color:#000000,font-weight:bold
        style A4 fill:#ffcdd2,stroke:#d32f2f,stroke-width:2px,color:#000000,font-weight:bold
        style A5 fill:#ffcdd2,stroke:#d32f2f,stroke-width:2px,color:#000000,font-weight:bold
        A1["Input Validation<br>- Invalid file types<br>- Missing batch ID<br>- Empty requests"] -->|"400 Bad Request"| B["FastAPI Error Handler"]
        A2["Batch Processing<br>- Batch not found<br>- Invalid batch state"] -->|"404 Not Found"| B
        A3["Model Inference<br>- Model loading errors<br>- Prediction failures"] -->|"500 Internal Error"| B
        A4["File Operations<br>- File read/write errors<br>- Storage issues"] -->|"500 Internal Error"| B
        A5["Rate Limiting<br>- Too many requests<br>- SlowAPI limits"] -->|"429 Too Many Requests"| B
    end

    subgraph "Error Processing"
        style B fill:#c8e6c9,stroke:#388e3c,stroke-width:2px,color:#000000,font-weight:bold
        style C fill:#c8e6c9,stroke:#388e3c,stroke-width:2px,color:#000000,font-weight:bold
        style D fill:#c8e6c9,stroke:#388e3c,stroke-width:2px,color:#000000,font-weight:bold
        B -->|"Classify & Log"| C["Error Response Generator<br>- HTTPException with detail<br>- Structured error messages<br>- Status code mapping"]
        C -->|"Return to Client"| D["JSON Error Response<br>{detail: 'error message',<br>status_code: xxx}"]
    end

    subgraph "Test Coverage"
        style E fill:#e1bee7,stroke:#7b1fa2,stroke-width:2px,color:#000000,font-weight:bold
        style F fill:#e1bee7,stroke:#7b1fa2,stroke-width:2px,color:#000000,font-weight:bold
        style G fill:#e1bee7,stroke:#7b1fa2,stroke-width:2px,color:#000000,font-weight:bold
        B -->|"Pytest Coverage"| E["tests/test_batch.py<br>- Invalid batch ID<br>- Missing files<br>- Mixed valid/invalid files<br>- URL/image scenarios"]
        E -->|"Test Scenarios"| F["Batch lifecycle, status, error scenarios<br>- Empty batch<br>- Single file<br>- Invalid file types"]
        F -->|"Edge Cases"| G["Edge case handling<br>- Server-side retry<br>- WebSocket errors<br>- Export errors"]
    end

    subgraph "Logging & Monitoring"
        style H fill:#ffe0b2,stroke:#f57c00,stroke-width:2px,color:#000000,font-weight:bold
        style I fill:#ffe0b2,stroke:#f57c00,stroke-width:2px,color:#000000,font-weight:bold
        style J fill:#ffe0b2,stroke:#f57c00,stroke-width:2px,color:#000000,font-weight:bold
        B -->|"Write Logs"| H["utils/logger.py<br>- Structured logging<br>- Error categorization<br>- Batch tracking"]
        H -->|"Store Logs"| I["logs/<br>Application logs<br>Error logs<br>Performance metrics<br>10MB rotation"]
        I -->|"Cleanup"| J["utils/cleanup.py<br>APScheduler<br>Log rotation<br>Size-based cleanup<br>Retention policies"]
    end